(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["gallery"],{

/***/ "./assets/js/gallery/gallery.js":
/*!**************************************!*\
  !*** ./assets/js/gallery/gallery.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function ($) {
  "use strict";

  var $galleryMainLoaderContainer = $('#gallery-main-loader');
  var $galleryFilterContainer = $('#gallery-filters ');
  var $galleryContainer = $('#gallery-image-container');
  var $galleryImageContainer = $galleryContainer.isotope({
    itemSelector: '.gallery-item',
    layoutMode: 'fitRows'
  });
  var filterSet = [];

  var _hideLoaders = function _hideLoaders(element) {
    $galleryMainLoaderContainer.addClass('hidden');
    element.find('.gallery-filter-loader').addClass('hidden');
  };

  var _showLoaders = function _showLoaders(element) {
    $galleryMainLoaderContainer.removeClass('hidden');
    element.find('.gallery-filter-loader').removeClass('hidden');
  };

  var _loadData = function _loadData(categoryId, filter, $navContext) {
    $.ajax({
      'type': 'GET',
      'url': '/gallery/category/' + categoryId,
      success: function success(response) {
        var $map = [];
        response.data.map(function (image) {
          var itemCategoryId = image.galleryCategoryId;
          var description = '';
          var item = '';
          description += image.material ? image.material : '';
          description += image.size ? ' | ' + image.size : '';
          description += image.year ? ' | ' + image.year : '';
          item += '<div class="col-lg-4 col-md-6 gallery-item filter-' + itemCategoryId + ' wow fadeInUp">';
          item += '<div class="gallery-wrap">';
          item += '<figure>';
          item += '<a href="/img/' + image.path + '" data-lightbox="' + itemCategoryId + '" data-title="' + image.name + ' - ' + image.year + '">';
          item += '<img src="/img/' + image.path + '" class="img-fluid" alt="">';
          item += '</a>';
          item += '</figure>';
          item += '<div class="gallery-info">';
          item += '<p>' + image.name + '</p>';
          item += '<p>' + description + '</p>';
          item +=  true ? image.comment : undefined;
          item += '</div>';
          item += '</div>';
          item += '</div>';
          $map.push($(item));
        });
        $galleryImageContainer.append($map).isotope('insert', $map).isotope('reloadItems');
        $galleryImageContainer.isotope({
          filter: filter
        });
      },
      error: function error(response) {
        console.log('ERROR', response);
      },
      complete: function complete() {
        _hideLoaders($navContext);
      }
    });
  };

  $galleryFilterContainer.find('li').on('click', function () {
    var $item = $(this);
    $galleryFilterContainer.find('li').removeClass('filter-active');
    $item.addClass('filter-active');

    _showLoaders($item);

    var categoryId = $item.data('cat-id');
    var filter = $item.data('filter');

    if (!filterSet.includes(filter)) {
      filterSet.push(filter);

      _loadData(categoryId, filter, $item);
    } else {
      _hideLoaders($item);

      var elements = $galleryImageContainer.isotope('getFilteredItemElements');
      $galleryImageContainer.isotope('insert', elements).isotope('reloadItems');
      $galleryImageContainer.isotope({
        filter: filter
      });
    }
  });
})(jQuery);

/***/ })

},[["./assets/js/gallery/gallery.js","runtime"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,